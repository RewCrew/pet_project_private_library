version: "3"
services:
  postgresdb:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: password
    #    volumes:
    #      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"


  users_service:
    build: ./user_service
    #      context: ./user_service
    #      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: superuser
      RABBITMQ_PASS: password
      RABBITMQ_PORT: 5672
      HOST: postgresdb
      USER: postgres
      PASSWORD: password
      DATABASE: evraz_project
    volumes:
      - ./user_service:/app/user_service
    depends_on:
      - postgresdb
      - rabbitmq
  #    restart: unless-stopped

  books_service:
    build: ./book_service
    #      context: ./book_service
    #      dockerfile: Dockerfile
    ports:
      - "1235:1235"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: superuser
      RABBITMQ_PASS: password
      RABBITMQ_PORT: 5672
      HOST: postgresdb
      USER: postgres
      PASSWORD: password
      DATABASE: evraz_project
    volumes:
      - ./book_service:/app/book_service
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped
  books_service_consumer:
    build: ./book_service
    #    ports:
    #      - "1235:1235"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: superuser
      RABBITMQ_PASS: password
      RABBITMQ_PORT: 5672
      HOST: postgresdb
      USER: postgres
      PASSWORD: password
      DATABASE: evraz_project
    volumes:
      - ./book_service:/app/book_service
    #    depends_on:
    #      - postgresdb
    #      - rabbitmq
    restart: on-failure
    command:
      "entrypoint_consumer.sh"

#  books_service_cli:
#    build: ./book_service
#    #    ports:
#    #      - "1235:1235"
#    environment:
#      RABBITMQ_HOST: rabbitmq
#      RABBITMQ_USER: superuser
#      RABBITMQ_PASS: password
#      RABBITMQ_PORT: 5672
#      HOST: postgresdb
#      USER: postgres
#      PASSWORD: password
#      DATABASE: evraz_project
#    volumes:
#      - ./book_service:/app/book_service
#    #    depends_on:
#    #      - postgresdb
#    #      - rabbitmq
#    restart: on-failure
#    command:
#      "entrypoint_cli.sh"


  #  issues_service:
  #    build:
  #      context: ./issues_service
  #      dockerfile: Dockerfile
  #    ports:
  #      - "1236:1236"
  #    environment:
  #       RABBITMQ_HOST: rabbitmq
  #       RABBITMQ_USER: superuser
  #       RABBITMQ_PASS: password
  #       RABBITMQ_PORT: 5672
  #       HOST: postgresdb
  #       USER: postgres
  #       PASSWORD: password
  #       DATABASE: evraz_project_issues_service
  #    depends_on:
  #      - postgresdb
  #      - rabbitmq
  #    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: superuser
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - "rabbitmq_data:/data"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - users_service
      - books_service
#      - issues_service

volumes:
  rabbitmq_data:




